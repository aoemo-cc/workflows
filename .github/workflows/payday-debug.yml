name: payday-debug

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'unity的分支或标签'
        required: true
        default: "develop"
        type: string

# 参数通过创建模板的api，动态生成
env:
  flow_pg_name: "payday"
  # <仓库名>-<环境代号>
  flow_artifact_name: "payday-debug"
  flow_env: "Debug"
  flow_language_type: ""
  flow_language_version: ""
  flow_android_repo_type: "github"
  flow_android_repo_address: "aoemo-cc/UGameAndroid"
  flow_android_repo_user: ""
  flow_android_repo_password: "${{ secrets.GH_TOKEN }}"
  flow_unity_repo_type: "github"
  flow_unity_repo_address: "aoemo-cc/UGameFrame"
  flow_unity_repo_user: ""
  flow_unity_repo_password: "${{ secrets.GH_TOKEN }}"
  # flow_build_cmd: ""
  # flow_dependency_cmd: ""
  # flow_test_cmd: ""
  flow_channel_type: "feishu"
  flow_send_addr: ${{ secrets.FS_ROBOT }}

  flow_full_repo_addr: ""
  flow_wf_addr: "${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/actions/runs/${{ github.RUN_ID }}"
  flow_actor: "${{ github.ACTOR }}"

jobs:
  build:
    name: 编译打包
    runs-on: ubuntu-latest
    steps:
      - name: 配置ndk环境
        uses: nttld/setup-ndk@v1.4.2
        with:
          # ndk-version: r19c
          ndk-version: 19.0.5232133
          local-cache: true
          link-to-sdk: true
      - name: 测试
        run: |
          cd /home/runner/.setup-ndk/r19c
          # tree .
          ./ndk-build --version
          
      # - name: 配置java环境
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: temurin
      #     java-version: 11
          
      # - name: 配置Gradle环境
      #   uses: gradle/gradle-build-action@v2
      #   with:
      #     gradle-version: 6.5
          
      # - name: 预建目录
      #   run: mkdir -v actions_temp UGameAndroid UGameFrame
      # - name: 拉取自定义的action
      #   uses: actions/checkout@v4.1.1
      #   with:
      #     path: 'actions_temp'
          
      # # - name: 拉安卓代码
      # #   uses: ./actions_temp/.github/actions/action-checkout
      # #   with:
      # #     repo_type: "${{ env.flow_android_repo_type }}"
      # #     repository: "${{ env.flow_android_repo_address }}"
      # #     ref: "${{ env.flow_pg_name }}"
      # #     username: "${{ env.flow_android_repo_user }}"
      # #     password: "${{ env.flow_android_repo_password }}"
      # #     root_dir: "UGameAndroid"
          
      # - name: 拉安卓代码
      #   uses: actions/checkout@v4.1.1
      #   with:
      #     repository: "${{ env.flow_android_repo_address }}"
      #     ref: "_account_${{ env.flow_pg_name }}"
      #     token: "${{ env.flow_android_repo_password }}"
      #     path: "UGameAndroid"
          
      # # - name: 拉unity代码
      # #   uses: ./actions_temp/.github/actions/action-checkout
      # #   with:
      # #     repo_type: "${{ env.flow_unity_repo_type }}"
      # #     repository: "${{ env.flow_unity_repo_address }}"
      # #     ref: "${{ inputs.ref }}"
      # #     username: "${{ env.flow_unity_repo_user }}"
      # #     password: "${{ env.flow_unity_repo_password }}"
      # #     root_dir: "UGameFrame"
          
      # - name: 拉unity代码
      #   uses: actions/checkout@v4.1.1
      #   with:
      #     repository: "${{ env.flow_unity_repo_address }}"
      #     ref: "${{ inputs.ref }}"
      #     token: "${{ env.flow_unity_repo_password }}"
      #     path: "UGameFrame"

      # - name: 验证拉取操作
      #   run: |
      #     echo "查看当前工作目录"
      #     pwd && ls -t1
      #     echo "查看安卓分支"
      #     cd UGameAndroid
      #     git remote -v && git branch
      #     pwd && ls -t1
      #     ls -l /home/runner/work/workflows/workflows/UGameAndroid/app/src/payday/*
      #     echo "查看unity分支"
      #     cd ../UGameFrame
      #     git remote -v && git branch
      #     pwd && ls -t1
      
      # - name: Library缓存
      #   uses: actions/cache@v3.3.2
      #   with:
      #     path: UGameFrame/${{ env.flow_pg_name }}_UClient/Library
      #     key: Library-unity-${{ GITHUB.WORKFLOW }}-${{ GITHUB.RUN_NUMBER }}
      #     restore-keys: Library-
      # - name: 解决git分支非最新导致错误
      #   working-directory: UGameFrame
      #   run: |
      #     git config --global user.name 'liuming'
      #     git config --global user.email 'liuming@aoemo.com'
      #     git add -A
      #     git commit -m "workflow编译临时使用"
      # # - name: 清理ubuntu磁盘空间(非必须)
      # #   uses: jlumbroso/free-disk-space@v1.3.1
      # - name: Unity编译
      #   uses: game-ci/unity-builder@v4.1.3
      #   env:
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #     UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      #   with:
      #     targetPlatform: Android
      #     unityVersion: 2020.3.45f1
      #     projectPath: UGameFrame/${{ env.flow_pg_name }}_UClient
      #     buildMethod: BuildProjectApkClientTool.BuildUnitySyncAndroidStudio
      #     # customParameters: -executeMethod BuildProjectApkClientTool.BuildUnitySyncAndroidStudio
      #     # customParameters: -batchmode -executeMethod BuildProjectApkClientTool.BuildUnitySyncAndroidStudio -quit
          
      # - name: 验证
      #   run: |
      #     uptime 
      #     echo "启动时间"
      #     ls -at1 UGameFrame/${{ env.flow_pg_name }}_UClient/
      #     ls UGameFrame/${{ env.flow_pg_name }}_UClient/_ObfuscatorNameTranslation.txt
      
      # - name: gradlew打包
      #   # shell: sh
      #   working-directory: UGameAndroid
      #   run: |
      #     set -x
      #     echo -e "sdk.dir=${ANDROID_HOME}\nndk.dir=/home/runner/.setup-ndk/r19c" > local.properties
      #     ls -l local.properties && cat local.properties
      #     ls -t1 /home/runner/.setup-ndk/r19c/
      #     ls -t1 ${ANDROID_HOME}
          
      #     sudo apt-get -y install dos2unix
      #     dos2unix ./gradlew
      #     ls -l ./gradlew
      #     chmod +x ./gradlew
      #     ls -l ./gradlew
      #     _flow_pg_name=${{ env.flow_pg_name }}
      #     _flow_pg_name=${_flow_pg_name^}
      #     echo -e "\033[33mgradle版本：$(gradle -v)\033[0m"
      #     echo -e "\033[33m执行 ./gradlew clean\033[0m"
      #     ./gradlew clean
      #     echo -e "\033[33m所在目录: $(pwd && ls)\033[0m"
      #     echo -e "\033[33m打包命令：./gradlew clean bundle${_flow_pg_name}${{ env.flow_env }}\033[0m"
      #     ./gradlew clean bundle${_flow_pg_name}${{ env.flow_env }}
      #     echo -e "\033[33m查看app/build/outputs/apk/release目录下内容\033[0m"
      #     pwd && [[ -d 'app/build/outputs/apk/release' ]] && ls -t1 app/build/outputs/apk/release
          
      #     echo -e "\033[33m查看outputs目录全部信息\033[0m"
      #     tree app/build/outputs/
      #     echo -e "\033[33m查看符号表目录全部信息\033[0m"
      #     tree unityLibrary/symbols
    
      # - name: 上传apk
      #   uses: actions/upload-artifact@v3.1.3
      #   with:
      #     name: apk_1
      #     path: |
      #       app/build/outputs/apk/release/app-release.apk
    
      # - name: 上传json文件
      #   uses: actions/upload-artifact@v3.1.3
      #   with:
      #     name: json_1
      #     path: app/build/outputs/apk/release/output-metadata.json
          
          
